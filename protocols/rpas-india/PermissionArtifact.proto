syntax = "proto3";

// Root element for the permission request
message UAPermission {
    uint64 lastUpdated = 1;             // Timestamp information in IST (timestamps are always in UTC)
    float ttl = 2;                      // Time to Live value in hours suggesting the caching and invalidation rules of the message
    string txnId = 3;                   // The transaction identifier generated by the DSP
    string permissionartefactId = 4;    // The unique identifier for the permission artefact. This would be the reference for any re-issue or revocation
    string pilotPinHash = 5;             // The salted hashed PIN which would be verified against what the pilot enters before take off
    Operator operator = 6;              // Root element of the UA Operator
    FlightDetails flightDetails = 7;    // Root element of the UA flight details
    bytes digitalSignature = 8;         // The element containing the cryptographically verifiable signature of the applicant
}

message Operator {
    message Pilot {
        string no = 1;                  // The Pilot Registration Number
        uint64 validTo = 2;             // Expiry Date of the Pilot Registration (UTC timestamp)
    } 

    string operatorID = 1;              // The Operator ID obtained during registration
    Pilot pilot = 2;                    // Root element of the UA pilot
}

message FlightDetails {
    message UADetails {
        string uinNo = 1;               // The UIN of the UA for which the flight permissions are being requested
    }
    message FlightPurpose {
        string shortDesc = 1;           // A short description for the purpose of the flight
        uint32 frequency = 2;           // Number of flights for the given flight parameters
    }
    message PayloadDetails {
        double payLoadWeight = 1;       // The weight of the payload carried by the UA
        string payloadDetails = 2;      // Any other details that can be furnished about the payload carried by the UA
    }
    message FlightParameters {
        string gpsCoordinates = 1;      // The broad GLPS coordinates (boundary) of the UA flight represented as a polygon of points
        uint64 flightStartTime = 2;      // The start time and date of the planned UA flight (UTC timestamp)
        uint64 flightStartEnd = 3;      // The end time and date of the planned UA flight (UTC timestamp)
        float frequenciesUsed = 4;      // The planned radio frequencies to be used by the UA
    }

    UADetails uaDetails = 1;            // Root element of UADetails
    FlightPurpose flightPurpose = 2;    // Root element of Flight Purpose
    PayloadDetails payloadDetails = 3;  // Root element of Payload details
    FlightParameters flightParameters = 4;  // The root element of for all details about the UAâ€™s flight plan
}